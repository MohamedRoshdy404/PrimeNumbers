#include <iostream>
#include <string>
using namespace std;

enum enPrimNotPrime { Prime = 1, NotPrime = 2 };

int RandomNumber(int From, int To)
{
    //Function to generate a random number
    int randNum = rand() % (To - From + 1) + From;
    return randNum;
}


void ReadNumber(int arr[100] , int &arrLength) {

    cout << "enter the number " << endl;
    cin >> arrLength;

    for (int i = 0; i < arrLength; i++)
    {
        arr[i] = RandomNumber(1, 100);
    }
}

void PrintArray(int arr[100] , int arrLength) {

    for (int i = 0; i < arrLength; i++ ) {
        cout << arr[i] << " ";
    }

}

void CopyArray (int arr[100] , int arrLength ,int arr2[100]) {
    
    for (int i = 0; i < arrLength; i++) {

            arr2[i] = arr[i];

    }

}

enPrimNotPrime CheckPrime(int Number)
{
    int M = round(Number / 2);
    for (int Counter = 2; Counter <= M; Counter++)
    {
        if (Number % Counter == 0)
            return enPrimNotPrime::NotPrime;
    }
    return enPrimNotPrime::Prime;;
}

void CopyOnlyPrimeNumbers(int arrSource[100], int arrDestination[100], int arrLength, int& arr2Lenght)
{
    int Counter = 0;
    for (int i = 0; i < arrLength; i++)
    {
        if (CheckPrime(arrSource[i]) == enPrimNotPrime::Prime)
        {
            arrDestination[Counter] = arrSource[i];
            Counter++;
        }
    }
    arr2Lenght = --Counter;
}


int main() {
    srand((unsigned)time(NULL));

    int arr[100], arrLength , arr2[100], arr2Length= 0;
  
    ReadNumber(arr, arrLength);

    
    CopyOnlyPrimeNumbers(arr , arr2 , arrLength , arr2Length) ;

    cout << "\nArray 1 : \n" ;
    PrintArray(arr, arrLength);

    cout << "\nArray 2 : \n" << endl;
    PrintArray(arr2, arr2Length);

    cout << "\n";

    return 0; 
}